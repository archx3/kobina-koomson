// stylelint-disable declaration-no-important

//
// Text
//

.text-monospace { font-family: $font-family-monospace; }

// Alignment

.text-justify  { text-align: justify !important; }
.text-nowrap   { white-space: nowrap !important; }
.text-truncate { @include text-truncate; }

// Responsive alignment

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .text#{$infix}-left   { text-align: left !important; }
    .text#{$infix}-right  { text-align: right !important; }
    .text#{$infix}-center { text-align: center !important; }
  }
}

// Transformation

.text-lowercase  { text-transform: lowercase !important; }
.text-uppercase  { text-transform: uppercase !important; }
.text-capitalize { text-transform: capitalize !important; }
.text-underline { text-decoration: underline !important; }
.text-italic { font-style: italic !important; }

// Weight and italics

.font-weight-light  { font-weight: $font-weight-light !important; }
.font-weight-normal { font-weight: $font-weight-normal !important; }
.font-weight-bold   { font-weight: $font-weight-bold !important; }

.font-weight-300   { font-weight: 300 !important; }
.font-weight-400   { font-weight: 400 !important; }
.font-weight-500   { font-weight: 500 !important; }
.font-weight-600   { font-weight: 600 !important; }
.font-weight-700   { font-weight: 700 !important; }
.font-italic        { font-style: italic !important; }

// Contextual colors

.text-white { color: $white !important; }

@each $color, $value in $theme-colors {
  @include text-emphasis-variant(".text-#{$color}", $value);
}

@each $color, $value in $color-pallet-universal {
  @include text-emphasis-variant(".text-#{$color}", $value);
}

:root.dark, :root[data-theme="dark"] {
  @each $color, $value in $color-pallet-dark {
    @include text-emphasis-variant(".text-#{$color}", $value);
  }
}

@media (prefers-color-scheme: dark) {
  @each $color, $value in $color-pallet-dark {
    @include text-emphasis-variant(".text-#{$color}", $value);
  }
}

.text-body { color: var(--primary-text) !important; }
.text-muted {
  color: var(--primary-muted-text) !important;
  fill: var(--primary-muted-text);
}

.text-muted-2 {
  color: var(--primary-muted-text-2) !important;
  fill: var(--primary-muted-text-2);
}

.text-black-50 { color: rgba($black, .5) !important; }
.text-white-50 { color: rgba($white, .5) !important; }

// Misc

.text-hide {
  @include text-hide($ignore-warning: true);
}

.text-primary {
  color: var(--primary-text) !important;
  fill: var(--primary-text);
}
.text-secondary {
  color: var(--secondary-text) !important;
  fill: var(--secondary-text);
}
