@use "sass:math";
// stylelint-disable declaration-no-important

//
// Text
//

.text-monospace { font-family: $font-family-monospace; }

// Alignment

.text-justify  { text-align: justify !important; }
.text-nowrap   { white-space: nowrap !important; }
.text-truncate { @include text-truncate; }

// Responsive alignment

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .text#{$infix}-left   { text-align: left !important; }
    .text#{$infix}-right  { text-align: right !important; }
    .text#{$infix}-center { text-align: center !important; }
  }
}

// Transformation

.text-lowercase  { text-transform: lowercase !important; }
.text-uppercase  { text-transform: uppercase !important; }
.text-capitalize { text-transform: capitalize !important; }
.text-underline { text-decoration: underline !important; }
.text-italic { font-style: italic !important; }

// Weight and italics

.font-weight-light  { font-weight: $font-weight-light !important; }
.font-weight-normal { font-weight: $font-weight-normal !important; }
.font-weight-bold   { font-weight: $font-weight-bold !important; }

.font-weight-300   { font-weight: 300 !important; }
.font-weight-400   { font-weight: 400 !important; }
.font-weight-500   { font-weight: 500 !important; }
.font-weight-600   { font-weight: 600 !important; }
.font-weight-700   { font-weight: 700 !important; }
.font-italic        { font-style: italic !important; }

// Contextual colors

.text-white { color: $white !important; }

@each $color, $value in $theme-colors {
  @include text-emphasis-variant(".text-#{$color}", $value);
}

@each $color, $value in $color-pallet-universal {
  @include text-emphasis-variant(".text-#{$color}", $value);
}

:root.dark, :root[data-theme="dark"] {
  @each $color, $value in $color-pallet-dark {
    @include text-emphasis-variant(".text-#{$color}", $value);
  }
}

@media (prefers-color-scheme: dark) {
  @each $color, $value in $color-pallet-dark {
    @include text-emphasis-variant(".text-#{$color}", $value);
  }
}

.text-body { color: var(--primary-text) !important; }
.text-muted {
  color: var(--primary-muted-text) !important;
  fill: var(--primary-muted-text);
}

.text-muted-2 {
  color: var(--primary-muted-text-2) !important;
  fill: var(--primary-muted-text-2);
}

.text-black-50 { color: rgba($black, .5) !important; }
.text-white-50 { color: rgba($white, .5) !important; }

// Misc

.text-hide {
  @include text-hide($ignore-warning: true);
}

.text-primary {
  color: var(--primary-text) !important;
  fill: var(--primary-text);
}
.text-secondary {
  color: var(--secondary-text) !important;
  fill: var(--secondary-text);
}

.valign-middle {
  vertical-align: middle !important;
}
.valign-top {
  vertical-align: top !important;
}
.valign-bottom {
  vertical-align: bottom !important;
}
.valign-baseline {
  vertical-align: baseline !important;
}

// text sizing
$base-font-size: 1rem;

$size-multiplier-map: (
  '5xs': 0.25, // 4px
  '4xs': 0.375, // 6px
  '3xs': 0.5, // 8px
  '2xs': 0.625, // 10px
  'xs': 0.75, // 12px
  'sm': 0.875, // 14px
  'small': 0.875, // 14px
  'md': 1, // 16px
  'medium': 1, // 16px
  'base': 1, // 16px
  'lg': 1.25, // 20px
  'large': 1.25, // 20px
  'xl': 1.5, // 24px
  '2xl': 2, // 32px
  '3xl': 2.5, // 40px
  '4xl': 3, // 48px
  '5xl': 4, // 64px
  '6xl': 5, // 72px
  '7xl': 6, // 96px
);

@each $size, $multiplier in $size-multiplier-map {
  .text-#{$size} {
    font-size: $base-font-size * $multiplier !important;
  }
}

// line height in percentage
$line-height-map: (
  'none': 1, // 100%
  'tight': 1.25, // 125%
  'snug': 1.375, // 137.5%
  'normal': 1.5, // 150%
  'relaxed': 1.625, // 162.5%
  'loose': 2, // 200%
);

@each $size, $multiplier in $line-height-map {
  .leading-#{$size}, .line-height-#{$size} {
    line-height: $multiplier !important;
  }
}

// let's add class for line height in decimal values incrementing by 0.1 and removing the leading zero and escaping the decimal point
//@for $i from 1 through 10 {
//  $increment: math.div($i, 10);
//
//  .leading-#{escape-decimal($increment)}, .line-height-#{escape-decimal($increment)} {
//    line-height: $increment;
//  }
//}

// text selection
$select-options: [
  'auto',
  'text',
  'none',
  'contain',
  'all'
];

@each $option in $select-options {
  .select-#{$option} {
    -webkit-touch-callout: $option;
    -webkit-user-select: $option;
    -khtml-user-select: $option;
    -moz-user-select: $option;
    -ms-user-select: $option;
    user-select: $option;
  }
}
