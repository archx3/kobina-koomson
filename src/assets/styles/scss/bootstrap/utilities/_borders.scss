// stylelint-disable declaration-no-important
@import "../../includes/mixins";

//
// Border
//

$border-styles: (
  'solid': solid,
  'dashed': dashed,
  'dotted': dotted,
  'double': double,
  'none': none,
  'hidden': hidden,
);

.border {
  border: $border-width solid var(--outline) !important;

  &-divider {
    border: $border-width solid var(--divider-color) !important;
  }

  @each $style, $value in $border-styles {
    &-#{$style} {
      border-style: $value !important;
    }
  }

  @for $i from 0 through 5 {
    &-#{$i} {
      border-width: #{$i}px !important;
    }
  }
}

.border-top {
  border-top: $border-width solid var(--outline) !important;

  @each $style, $value in $border-styles {
    &-#{$style} {
      border-top-style: $value !important;
    }
  }
}

.border-right {
  border-right: $border-width solid var(--outline) !important;

  @each $style, $value in $border-styles {
    &-#{$style} {
      border-right-style: $value !important;
    }
  }
}

.border-bottom {
  border-bottom: $border-width solid var(--outline) !important;

  @each $style, $value in $border-styles {
    &-#{$style} {
      border-bottom-style: $value !important;
    }
  }
}

.border-left {
  border-left: $border-width solid var(--outline) !important;

  @each $style, $value in $border-styles {
    &-#{$style} {
      border-left-style: $value !important;
    }
  }
}

.divider-top {
  border-top: $border-width solid var(--divider-color) !important;

  @each $style, $value in $border-styles {
    &-#{$style} {
      border-top-style: $value !important;
    }
  }
}

.divider-right {
  border-right: $border-width solid var(--divider-color) !important;

  @each $style, $value in $border-styles {
    &-#{$style} {
      border-right-style: $value !important;
    }
  }
}

.divider-bottom {
  border-bottom: $border-width solid var(--divider-color) !important;

  @each $style, $value in $border-styles {
    &-#{$style} {
      border-bottom-style: $value !important;
    }
  }
}

.divider-left {
  border-left: $border-width solid var(--divider-color) !important;

  @each $style, $value in $border-styles {
    &-#{$style} {
      border-left-style: $value !important;
    }
  }
}

// region no borders
.border-0 {
  border: 0 !important;
}

.border-top-0 {
  border-top: 0 !important;
}

.border-right-0 {
  border-right: 0 !important;
}

.border-bottom-0 {
  border-bottom: 0 !important;
}

.border-left-0 {
  border-left: 0 !important;
}

.border-x-0 {
  border-left: 0 !important;
  border-right: 0 !important;
}

.border-y-0 {
  border-bottom: 0 !important;
  border-top: 0 !important;
}
// endregion

@include _mobile {
  .border-sm {
    border: $border-width solid var(--outline) !important;
  }
  .border-top-sm {
    border-top: $border-width solid var(--outline) !important;
  }
  .border-right-sm {
    border-right: $border-width solid var(--outline) !important;
  }
  .border-bottom-sm {
    border-bottom: $border-width solid var(--outline) !important;
  }
  .border-left-sm {
    border-left: $border-width solid var(--outline) !important;
  }
}

@include _tablet {
  .border-md {
    border: $border-width solid var(--outline) !important;
  }
  .border-top-md {
    border-top: $border-width solid var(--outline) !important;
  }
  .border-right-md {
    border-right: $border-width solid var(--outline) !important;
  }
  .border-bottom-md {
    border-bottom: $border-width solid var(--outline) !important;
  }
  .border-left-md {
    border-left: $border-width solid var(--outline) !important;
  }
}

@include _desktop {
  .border-lg {
    border: $border-width solid var(--outline) !important;
  }
  .border-top-lg {
    border-top: $border-width solid var(--outline) !important;
  }
  .border-right-lg {
    border-right: $border-width solid var(--outline) !important;
  }
  .border-bottom-lg {
    border-bottom: $border-width solid var(--outline) !important;
  }
  .border-left-lg {
    border-left: $border-width solid var(--outline) !important;
  }
}

@each $color, $value in $theme-colors {
  .border-#{$color} {
    border-color: $value !important;
  }
}

.border-accent {
  border-color: var(--accent-color) !important;
}

.border-white {
  border-color: $white !important;
}

// stylelint-disable property-disallowed-list, declaration-no-important

//
// Border-radius
//

.rounded-sm {
  border-radius: $border-radius-sm !important;
}

.rounded {
  border-radius: $border-radius !important;

  @for $i from 2 through 50 {
    &-#{$i} {
      border-radius: #{$i}#{'px'} !important;
    }
  }
}

.rounded-top {
  border-top-left-radius: $border-radius !important;
  border-top-right-radius: $border-radius !important;

  @for $i from 2 through 50 {
    &-#{$i} {
      border-top-left-radius: #{$i}#{'px'} !important;
      border-top-right-radius: #{$i}#{'px'} !important;
    }
  }
}
.rounded-top-0 {
  border-top-left-radius: 0 !important;
  border-top-right-radius: 0 !important;
}

.rounded-right {
  border-top-right-radius: $border-radius !important;
  border-bottom-right-radius: $border-radius !important;

  @for $i from 2 through 50 {
    &-#{$i} {
      border-top-right-radius: #{$i}#{'px'} !important;
      border-bottom-right-radius: #{$i}#{'px'} !important;
    }
  }
}
.rounded-right-0 {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
}

.rounded-bottom {
  border-bottom-right-radius: $border-radius !important;
  border-bottom-left-radius: $border-radius !important;

  @for $i from 2 through 50 {
    &-#{$i} {
      border-bottom-right-radius: #{$i}#{'px'} !important;
      border-bottom-left-radius: #{$i}#{'px'} !important;
    }
  }
}
.rounded-bottom-0 {
  border-bottom-right-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}

.rounded-left {
  border-top-left-radius: $border-radius !important;
  border-bottom-left-radius: $border-radius !important;

  @for $i from 2 through 50 {
    &-#{$i} {
      border-top-left-radius: #{$i}#{'px'} !important;
      border-bottom-left-radius: #{$i}#{'px'} !important;
    }
  }
}

.rounded-left-0 {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
}

.rounded-lg {
  border-radius: $border-radius-lg !important;
}

.rounded-circle {
  border-radius: 50% !important;
}

.rounded-pill {
  border-radius: $rounded-pill !important;
}

.rounded-0 {
  border-radius: 0 !important;
}

